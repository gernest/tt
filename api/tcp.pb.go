// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcp.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route_LoadBalanceAlgo int32

const (
	Route_RoundRobinWeighted Route_LoadBalanceAlgo = 0
	Route_RandomWeighted     Route_LoadBalanceAlgo = 1
	Route_SmoothWeighted     Route_LoadBalanceAlgo = 2
)

var Route_LoadBalanceAlgo_name = map[int32]string{
	0: "RoundRobinWeighted",
	1: "RandomWeighted",
	2: "SmoothWeighted",
}

var Route_LoadBalanceAlgo_value = map[string]int32{
	"RoundRobinWeighted": 0,
	"RandomWeighted":     1,
	"SmoothWeighted":     2,
}

func (x Route_LoadBalanceAlgo) String() string {
	return proto.EnumName(Route_LoadBalanceAlgo_name, int32(x))
}

func (Route_LoadBalanceAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{4, 0}
}

type Context_Protocol int32

const (
	Context_TCP       Context_Protocol = 0
	Context_UDP       Context_Protocol = 1
	Context_HTTP      Context_Protocol = 2
	Context_WEBSOCKET Context_Protocol = 3
	Context_QUIC      Context_Protocol = 4
)

var Context_Protocol_name = map[int32]string{
	0: "TCP",
	1: "UDP",
	2: "HTTP",
	3: "WEBSOCKET",
	4: "QUIC",
}

var Context_Protocol_value = map[string]int32{
	"TCP":       0,
	"UDP":       1,
	"HTTP":      2,
	"WEBSOCKET": 3,
	"QUIC":      4,
}

func (x Context_Protocol) String() string {
	return proto.EnumName(Context_Protocol_name, int32(x))
}

func (Context_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9, 0}
}

type Rule_HTTP_Method int32

const (
	Rule_HTTP_GET     Rule_HTTP_Method = 0
	Rule_HTTP_POST    Rule_HTTP_Method = 1
	Rule_HTTP_PUT     Rule_HTTP_Method = 2
	Rule_HTTP_DELETE  Rule_HTTP_Method = 3
	Rule_HTTP_PATCH   Rule_HTTP_Method = 4
	Rule_HTTP_OPTIONS Rule_HTTP_Method = 5
	Rule_HTTP_CONNECT Rule_HTTP_Method = 6
	Rule_HTTP_HEAD    Rule_HTTP_Method = 7
	Rule_HTTP_TRACE   Rule_HTTP_Method = 8
)

var Rule_HTTP_Method_name = map[int32]string{
	0: "GET",
	1: "POST",
	2: "PUT",
	3: "DELETE",
	4: "PATCH",
	5: "OPTIONS",
	6: "CONNECT",
	7: "HEAD",
	8: "TRACE",
}

var Rule_HTTP_Method_value = map[string]int32{
	"GET":     0,
	"POST":    1,
	"PUT":     2,
	"DELETE":  3,
	"PATCH":   4,
	"OPTIONS": 5,
	"CONNECT": 6,
	"HEAD":    7,
	"TRACE":   8,
}

func (x Rule_HTTP_Method) String() string {
	return proto.EnumName(Rule_HTTP_Method_name, int32(x))
}

func (Rule_HTTP_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 2, 0}
}

type Response struct {
	// Types that are valid to be assigned to Result:
	//	*Response_Ok
	//	*Response_Error
	Result               isResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type isResponse_Result interface {
	isResponse_Result()
}

type Response_Ok struct {
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3,oneof"`
}

type Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*Response_Ok) isResponse_Result() {}

func (*Response_Error) isResponse_Result() {}

func (m *Response) GetResult() isResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Response) GetOk() bool {
	if x, ok := m.GetResult().(*Response_Ok); ok {
		return x.Ok
	}
	return false
}

func (m *Response) GetError() string {
	if x, ok := m.GetResult().(*Response_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Ok)(nil),
		(*Response_Error)(nil),
	}
}

type Config struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{1}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type WeightedAddr struct {
	Addr                 *Address          `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Weight               uint32            `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	MetricLabels         map[string]string `protobuf:"bytes,4,rep,name=metric_labels,json=metricLabels,proto3" json:"metric_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WeightedAddr) Reset()         { *m = WeightedAddr{} }
func (m *WeightedAddr) String() string { return proto.CompactTextString(m) }
func (*WeightedAddr) ProtoMessage()    {}
func (*WeightedAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{2}
}

func (m *WeightedAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeightedAddr.Unmarshal(m, b)
}
func (m *WeightedAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeightedAddr.Marshal(b, m, deterministic)
}
func (m *WeightedAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightedAddr.Merge(m, src)
}
func (m *WeightedAddr) XXX_Size() int {
	return xxx_messageInfo_WeightedAddr.Size(m)
}
func (m *WeightedAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightedAddr.DiscardUnknown(m)
}

var xxx_messageInfo_WeightedAddr proto.InternalMessageInfo

func (m *WeightedAddr) GetAddr() *Address {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *WeightedAddr) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *WeightedAddr) GetMetricLabels() map[string]string {
	if m != nil {
		return m.MetricLabels
	}
	return nil
}

type Address struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{3}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Route struct {
	Src                  *Address              `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Condition            *RequestMatch         `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	MetricsLabels        map[string]string     `protobuf:"bytes,3,rep,name=metrics_labels,json=metricsLabels,proto3" json:"metrics_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retries              *Retries              `protobuf:"bytes,4,opt,name=retries,proto3" json:"retries,omitempty"`
	Timeout              *duration.Duration    `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	KeepAlive            *duration.Duration    `protobuf:"bytes,6,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`
	Endpoint             *WeightedAddr         `protobuf:"bytes,7,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	LoadBalance          []*WeightedAddr       `protobuf:"bytes,8,rep,name=load_balance,json=loadBalance,proto3" json:"load_balance,omitempty"`
	LoadBalanceAlgo      Route_LoadBalanceAlgo `protobuf:"varint,9,opt,name=load_balance_algo,json=loadBalanceAlgo,proto3,enum=api.Route_LoadBalanceAlgo" json:"load_balance_algo,omitempty"`
	AllowAcme            bool                  `protobuf:"varint,10,opt,name=allow_acme,json=allowAcme,proto3" json:"allow_acme,omitempty"`
	EnableOptimizedCopy  bool                  `protobuf:"varint,11,opt,name=enable_optimized_copy,json=enableOptimizedCopy,proto3" json:"enable_optimized_copy,omitempty"`
	Speed                *Speed                `protobuf:"bytes,12,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{4}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetSrc() *Address {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Route) GetCondition() *RequestMatch {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Route) GetMetricsLabels() map[string]string {
	if m != nil {
		return m.MetricsLabels
	}
	return nil
}

func (m *Route) GetRetries() *Retries {
	if m != nil {
		return m.Retries
	}
	return nil
}

func (m *Route) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *Route) GetKeepAlive() *duration.Duration {
	if m != nil {
		return m.KeepAlive
	}
	return nil
}

func (m *Route) GetEndpoint() *WeightedAddr {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *Route) GetLoadBalance() []*WeightedAddr {
	if m != nil {
		return m.LoadBalance
	}
	return nil
}

func (m *Route) GetLoadBalanceAlgo() Route_LoadBalanceAlgo {
	if m != nil {
		return m.LoadBalanceAlgo
	}
	return Route_RoundRobinWeighted
}

func (m *Route) GetAllowAcme() bool {
	if m != nil {
		return m.AllowAcme
	}
	return false
}

func (m *Route) GetEnableOptimizedCopy() bool {
	if m != nil {
		return m.EnableOptimizedCopy
	}
	return false
}

func (m *Route) GetSpeed() *Speed {
	if m != nil {
		return m.Speed
	}
	return nil
}

// Speed defines rate limiting of how fast data willl be copied. This is a
// described in bytes units
// "B", "KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"
//
// I you want do have upload speed of up to 40 mp per seconds then you can set
// downstream="20MiB/s"
type Speed struct {
	// The rate at which bytes are written to downstream connection. By downstream
	// connection we are refering to a connection established on tt server by the
	// world
	//   World => tt => Internal
	//   World [==> downstream connection] tt => Internal
	Downstream string `protobuf:"bytes,1,opt,name=downstream,proto3" json:"downstream,omitempty"`
	// The rate at which bytes are written to upstream connection. By upstream
	// connection we are refering to a connection established by tt server to the
	// configured internal service.
	//   World => tt => Internal
	//   World => tt [=> upstream connection] Internal
	Upstream             string   `protobuf:"bytes,2,opt,name=upstream,proto3" json:"upstream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Speed) Reset()         { *m = Speed{} }
func (m *Speed) String() string { return proto.CompactTextString(m) }
func (*Speed) ProtoMessage()    {}
func (*Speed) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{5}
}

func (m *Speed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Speed.Unmarshal(m, b)
}
func (m *Speed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Speed.Marshal(b, m, deterministic)
}
func (m *Speed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Speed.Merge(m, src)
}
func (m *Speed) XXX_Size() int {
	return xxx_messageInfo_Speed.Size(m)
}
func (m *Speed) XXX_DiscardUnknown() {
	xxx_messageInfo_Speed.DiscardUnknown(m)
}

var xxx_messageInfo_Speed proto.InternalMessageInfo

func (m *Speed) GetDownstream() string {
	if m != nil {
		return m.Downstream
	}
	return ""
}

func (m *Speed) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

type Retries struct {
	Enabled              bool         `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Budget               *RetryBudget `protobuf:"bytes,2,opt,name=budget,proto3" json:"budget,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Retries) Reset()         { *m = Retries{} }
func (m *Retries) String() string { return proto.CompactTextString(m) }
func (*Retries) ProtoMessage()    {}
func (*Retries) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{6}
}

func (m *Retries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Retries.Unmarshal(m, b)
}
func (m *Retries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Retries.Marshal(b, m, deterministic)
}
func (m *Retries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Retries.Merge(m, src)
}
func (m *Retries) XXX_Size() int {
	return xxx_messageInfo_Retries.Size(m)
}
func (m *Retries) XXX_DiscardUnknown() {
	xxx_messageInfo_Retries.DiscardUnknown(m)
}

var xxx_messageInfo_Retries proto.InternalMessageInfo

func (m *Retries) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Retries) GetBudget() *RetryBudget {
	if m != nil {
		return m.Budget
	}
	return nil
}

type RetryBudget struct {
	// The ratio of additional traffic that may be added by retries.  A
	// retry_ratio of 0.1 means that 1 retry may be attempted for every 10 regular
	// requests.  A retry_ratio of 1.0 means that 1 retry may be attempted for
	// every 1 regular request (in other words, total request load may be doubled
	// as a result of retries).
	RetryRatio float32 `protobuf:"fixed32,1,opt,name=retry_ratio,json=retryRatio,proto3" json:"retry_ratio,omitempty"`
	// The proxy may always attempt this number of retries per second, even if it
	// would violate the retry_ratio.  This is to allow retries to happen even
	// when the request rate is very low.
	MinRetriesPerSecond uint32 `protobuf:"varint,2,opt,name=min_retries_per_second,json=minRetriesPerSecond,proto3" json:"min_retries_per_second,omitempty"`
	// This duration indicates for how long requests should be considered for the
	// purposes of enforcing the retry_ratio.  A higher value considers a larger
	// window and therefore allows burstier retries.
	Ttl                  *duration.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RetryBudget) Reset()         { *m = RetryBudget{} }
func (m *RetryBudget) String() string { return proto.CompactTextString(m) }
func (*RetryBudget) ProtoMessage()    {}
func (*RetryBudget) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{7}
}

func (m *RetryBudget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryBudget.Unmarshal(m, b)
}
func (m *RetryBudget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryBudget.Marshal(b, m, deterministic)
}
func (m *RetryBudget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryBudget.Merge(m, src)
}
func (m *RetryBudget) XXX_Size() int {
	return xxx_messageInfo_RetryBudget.Size(m)
}
func (m *RetryBudget) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryBudget.DiscardUnknown(m)
}

var xxx_messageInfo_RetryBudget proto.InternalMessageInfo

func (m *RetryBudget) GetRetryRatio() float32 {
	if m != nil {
		return m.RetryRatio
	}
	return 0
}

func (m *RetryBudget) GetMinRetriesPerSecond() uint32 {
	if m != nil {
		return m.MinRetriesPerSecond
	}
	return 0
}

func (m *RetryBudget) GetTtl() *duration.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type RequestMatch struct {
	// Types that are valid to be assigned to Match:
	//	*RequestMatch_Sni
	//	*RequestMatch_Host
	//	*RequestMatch_Path
	//	*RequestMatch_Fixed
	Match                isRequestMatch_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestMatch) Reset()         { *m = RequestMatch{} }
func (m *RequestMatch) String() string { return proto.CompactTextString(m) }
func (*RequestMatch) ProtoMessage()    {}
func (*RequestMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{8}
}

func (m *RequestMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMatch.Unmarshal(m, b)
}
func (m *RequestMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMatch.Marshal(b, m, deterministic)
}
func (m *RequestMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMatch.Merge(m, src)
}
func (m *RequestMatch) XXX_Size() int {
	return xxx_messageInfo_RequestMatch.Size(m)
}
func (m *RequestMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMatch.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMatch proto.InternalMessageInfo

type isRequestMatch_Match interface {
	isRequestMatch_Match()
}

type RequestMatch_Sni struct {
	Sni string `protobuf:"bytes,1,opt,name=sni,proto3,oneof"`
}

type RequestMatch_Host struct {
	Host string `protobuf:"bytes,2,opt,name=host,proto3,oneof"`
}

type RequestMatch_Path struct {
	Path string `protobuf:"bytes,3,opt,name=path,proto3,oneof"`
}

type RequestMatch_Fixed struct {
	Fixed *empty.Empty `protobuf:"bytes,4,opt,name=fixed,proto3,oneof"`
}

func (*RequestMatch_Sni) isRequestMatch_Match() {}

func (*RequestMatch_Host) isRequestMatch_Match() {}

func (*RequestMatch_Path) isRequestMatch_Match() {}

func (*RequestMatch_Fixed) isRequestMatch_Match() {}

func (m *RequestMatch) GetMatch() isRequestMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *RequestMatch) GetSni() string {
	if x, ok := m.GetMatch().(*RequestMatch_Sni); ok {
		return x.Sni
	}
	return ""
}

func (m *RequestMatch) GetHost() string {
	if x, ok := m.GetMatch().(*RequestMatch_Host); ok {
		return x.Host
	}
	return ""
}

func (m *RequestMatch) GetPath() string {
	if x, ok := m.GetMatch().(*RequestMatch_Path); ok {
		return x.Path
	}
	return ""
}

func (m *RequestMatch) GetFixed() *empty.Empty {
	if x, ok := m.GetMatch().(*RequestMatch_Fixed); ok {
		return x.Fixed
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestMatch) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestMatch_Sni)(nil),
		(*RequestMatch_Host)(nil),
		(*RequestMatch_Path)(nil),
		(*RequestMatch_Fixed)(nil),
	}
}

type Context struct {
	Id                   int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Protocol             Context_Protocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=api.Context_Protocol" json:"protocol,omitempty"`
	Downstream           *Context_Conn    `protobuf:"bytes,3,opt,name=downstream,proto3" json:"downstream,omitempty"`
	Upstream             *Context_Conn    `protobuf:"bytes,4,opt,name=upstream,proto3" json:"upstream,omitempty"`
	Info                 *Context_Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Context) Reset()         { *m = Context{} }
func (m *Context) String() string { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()    {}
func (*Context) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9}
}

func (m *Context) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Context.Unmarshal(m, b)
}
func (m *Context) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Context.Marshal(b, m, deterministic)
}
func (m *Context) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Context.Merge(m, src)
}
func (m *Context) XXX_Size() int {
	return xxx_messageInfo_Context.Size(m)
}
func (m *Context) XXX_DiscardUnknown() {
	xxx_messageInfo_Context.DiscardUnknown(m)
}

var xxx_messageInfo_Context proto.InternalMessageInfo

func (m *Context) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Context) GetProtocol() Context_Protocol {
	if m != nil {
		return m.Protocol
	}
	return Context_TCP
}

func (m *Context) GetDownstream() *Context_Conn {
	if m != nil {
		return m.Downstream
	}
	return nil
}

func (m *Context) GetUpstream() *Context_Conn {
	if m != nil {
		return m.Upstream
	}
	return nil
}

func (m *Context) GetInfo() *Context_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type Context_Stat struct {
	BytesRead            int64    `protobuf:"varint,1,opt,name=bytesRead,proto3" json:"bytesRead,omitempty"`
	BytesWritten         int64    `protobuf:"varint,2,opt,name=bytesWritten,proto3" json:"bytesWritten,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Context_Stat) Reset()         { *m = Context_Stat{} }
func (m *Context_Stat) String() string { return proto.CompactTextString(m) }
func (*Context_Stat) ProtoMessage()    {}
func (*Context_Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9, 0}
}

func (m *Context_Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Context_Stat.Unmarshal(m, b)
}
func (m *Context_Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Context_Stat.Marshal(b, m, deterministic)
}
func (m *Context_Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Context_Stat.Merge(m, src)
}
func (m *Context_Stat) XXX_Size() int {
	return xxx_messageInfo_Context_Stat.Size(m)
}
func (m *Context_Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Context_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Context_Stat proto.InternalMessageInfo

func (m *Context_Stat) GetBytesRead() int64 {
	if m != nil {
		return m.BytesRead
	}
	return 0
}

func (m *Context_Stat) GetBytesWritten() int64 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

type Context_Conn struct {
	LocalAddress         string        `protobuf:"bytes,1,opt,name=localAddress,proto3" json:"localAddress,omitempty"`
	RemoteAddress        string        `protobuf:"bytes,2,opt,name=remoteAddress,proto3" json:"remoteAddress,omitempty"`
	Stat                 *Context_Stat `protobuf:"bytes,3,opt,name=stat,proto3" json:"stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Context_Conn) Reset()         { *m = Context_Conn{} }
func (m *Context_Conn) String() string { return proto.CompactTextString(m) }
func (*Context_Conn) ProtoMessage()    {}
func (*Context_Conn) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9, 1}
}

func (m *Context_Conn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Context_Conn.Unmarshal(m, b)
}
func (m *Context_Conn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Context_Conn.Marshal(b, m, deterministic)
}
func (m *Context_Conn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Context_Conn.Merge(m, src)
}
func (m *Context_Conn) XXX_Size() int {
	return xxx_messageInfo_Context_Conn.Size(m)
}
func (m *Context_Conn) XXX_DiscardUnknown() {
	xxx_messageInfo_Context_Conn.DiscardUnknown(m)
}

var xxx_messageInfo_Context_Conn proto.InternalMessageInfo

func (m *Context_Conn) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *Context_Conn) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

func (m *Context_Conn) GetStat() *Context_Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type Context_Info struct {
	Sni                  string   `protobuf:"bytes,1,opt,name=sni,proto3" json:"sni,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RouteName            string   `protobuf:"bytes,4,opt,name=routeName,proto3" json:"routeName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Context_Info) Reset()         { *m = Context_Info{} }
func (m *Context_Info) String() string { return proto.CompactTextString(m) }
func (*Context_Info) ProtoMessage()    {}
func (*Context_Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9, 2}
}

func (m *Context_Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Context_Info.Unmarshal(m, b)
}
func (m *Context_Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Context_Info.Marshal(b, m, deterministic)
}
func (m *Context_Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Context_Info.Merge(m, src)
}
func (m *Context_Info) XXX_Size() int {
	return xxx_messageInfo_Context_Info.Size(m)
}
func (m *Context_Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Context_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Context_Info proto.InternalMessageInfo

func (m *Context_Info) GetSni() string {
	if m != nil {
		return m.Sni
	}
	return ""
}

func (m *Context_Info) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Context_Info) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Context_Info) GetRouteName() string {
	if m != nil {
		return m.RouteName
	}
	return ""
}

type Rule struct {
	// Types that are valid to be assigned to Match:
	//	*Rule_All
	//	*Rule_Any
	//	*Rule_Not
	Match                isRule_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

type isRule_Match interface {
	isRule_Match()
}

type Rule_All struct {
	All *Rule_List `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type Rule_Any struct {
	Any *Rule_List `protobuf:"bytes,2,opt,name=any,proto3,oneof"`
}

type Rule_Not struct {
	Not *Rule `protobuf:"bytes,3,opt,name=not,proto3,oneof"`
}

func (*Rule_All) isRule_Match() {}

func (*Rule_Any) isRule_Match() {}

func (*Rule_Not) isRule_Match() {}

func (m *Rule) GetMatch() isRule_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Rule) GetAll() *Rule_List {
	if x, ok := m.GetMatch().(*Rule_All); ok {
		return x.All
	}
	return nil
}

func (m *Rule) GetAny() *Rule_List {
	if x, ok := m.GetMatch().(*Rule_Any); ok {
		return x.Any
	}
	return nil
}

func (m *Rule) GetNot() *Rule {
	if x, ok := m.GetMatch().(*Rule_Not); ok {
		return x.Not
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rule) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rule_All)(nil),
		(*Rule_Any)(nil),
		(*Rule_Not)(nil),
	}
}

type Rule_List struct {
	Rules                []*Rule  `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_List) Reset()         { *m = Rule_List{} }
func (m *Rule_List) String() string { return proto.CompactTextString(m) }
func (*Rule_List) ProtoMessage()    {}
func (*Rule_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 0}
}

func (m *Rule_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_List.Unmarshal(m, b)
}
func (m *Rule_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_List.Marshal(b, m, deterministic)
}
func (m *Rule_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_List.Merge(m, src)
}
func (m *Rule_List) XXX_Size() int {
	return xxx_messageInfo_Rule_List.Size(m)
}
func (m *Rule_List) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_List.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_List proto.InternalMessageInfo

func (m *Rule_List) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Rule_TCP struct {
	// Types that are valid to be assigned to Match:
	//	*Rule_TCP_Port
	//	*Rule_TCP_Ports
	//	*Rule_TCP_Sni
	Match                isRule_TCP_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Rule_TCP) Reset()         { *m = Rule_TCP{} }
func (m *Rule_TCP) String() string { return proto.CompactTextString(m) }
func (*Rule_TCP) ProtoMessage()    {}
func (*Rule_TCP) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 1}
}

func (m *Rule_TCP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_TCP.Unmarshal(m, b)
}
func (m *Rule_TCP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_TCP.Marshal(b, m, deterministic)
}
func (m *Rule_TCP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_TCP.Merge(m, src)
}
func (m *Rule_TCP) XXX_Size() int {
	return xxx_messageInfo_Rule_TCP.Size(m)
}
func (m *Rule_TCP) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_TCP.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_TCP proto.InternalMessageInfo

type isRule_TCP_Match interface {
	isRule_TCP_Match()
}

type Rule_TCP_Port struct {
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3,oneof"`
}

type Rule_TCP_Ports struct {
	Ports *Rule_TCP_PortRange `protobuf:"bytes,2,opt,name=ports,proto3,oneof"`
}

type Rule_TCP_Sni struct {
	Sni string `protobuf:"bytes,3,opt,name=sni,proto3,oneof"`
}

func (*Rule_TCP_Port) isRule_TCP_Match() {}

func (*Rule_TCP_Ports) isRule_TCP_Match() {}

func (*Rule_TCP_Sni) isRule_TCP_Match() {}

func (m *Rule_TCP) GetMatch() isRule_TCP_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Rule_TCP) GetPort() uint32 {
	if x, ok := m.GetMatch().(*Rule_TCP_Port); ok {
		return x.Port
	}
	return 0
}

func (m *Rule_TCP) GetPorts() *Rule_TCP_PortRange {
	if x, ok := m.GetMatch().(*Rule_TCP_Ports); ok {
		return x.Ports
	}
	return nil
}

func (m *Rule_TCP) GetSni() string {
	if x, ok := m.GetMatch().(*Rule_TCP_Sni); ok {
		return x.Sni
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rule_TCP) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rule_TCP_Port)(nil),
		(*Rule_TCP_Ports)(nil),
		(*Rule_TCP_Sni)(nil),
	}
}

type Rule_TCP_PortRange struct {
	Min                  uint32   `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule_TCP_PortRange) Reset()         { *m = Rule_TCP_PortRange{} }
func (m *Rule_TCP_PortRange) String() string { return proto.CompactTextString(m) }
func (*Rule_TCP_PortRange) ProtoMessage()    {}
func (*Rule_TCP_PortRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 1, 0}
}

func (m *Rule_TCP_PortRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_TCP_PortRange.Unmarshal(m, b)
}
func (m *Rule_TCP_PortRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_TCP_PortRange.Marshal(b, m, deterministic)
}
func (m *Rule_TCP_PortRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_TCP_PortRange.Merge(m, src)
}
func (m *Rule_TCP_PortRange) XXX_Size() int {
	return xxx_messageInfo_Rule_TCP_PortRange.Size(m)
}
func (m *Rule_TCP_PortRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_TCP_PortRange.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_TCP_PortRange proto.InternalMessageInfo

func (m *Rule_TCP_PortRange) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Rule_TCP_PortRange) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type Rule_HTTP struct {
	// Types that are valid to be assigned to Match:
	//	*Rule_HTTP_Method_
	//	*Rule_HTTP_Path
	Match                isRule_HTTP_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Rule_HTTP) Reset()         { *m = Rule_HTTP{} }
func (m *Rule_HTTP) String() string { return proto.CompactTextString(m) }
func (*Rule_HTTP) ProtoMessage()    {}
func (*Rule_HTTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 2}
}

func (m *Rule_HTTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_HTTP.Unmarshal(m, b)
}
func (m *Rule_HTTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_HTTP.Marshal(b, m, deterministic)
}
func (m *Rule_HTTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_HTTP.Merge(m, src)
}
func (m *Rule_HTTP) XXX_Size() int {
	return xxx_messageInfo_Rule_HTTP.Size(m)
}
func (m *Rule_HTTP) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_HTTP.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_HTTP proto.InternalMessageInfo

type isRule_HTTP_Match interface {
	isRule_HTTP_Match()
}

type Rule_HTTP_Method_ struct {
	Method Rule_HTTP_Method `protobuf:"varint,1,opt,name=method,proto3,enum=api.Rule_HTTP_Method,oneof"`
}

type Rule_HTTP_Path struct {
	Path *Rule_StringMatch `protobuf:"bytes,2,opt,name=path,proto3,oneof"`
}

func (*Rule_HTTP_Method_) isRule_HTTP_Match() {}

func (*Rule_HTTP_Path) isRule_HTTP_Match() {}

func (m *Rule_HTTP) GetMatch() isRule_HTTP_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Rule_HTTP) GetMethod() Rule_HTTP_Method {
	if x, ok := m.GetMatch().(*Rule_HTTP_Method_); ok {
		return x.Method
	}
	return Rule_HTTP_GET
}

func (m *Rule_HTTP) GetPath() *Rule_StringMatch {
	if x, ok := m.GetMatch().(*Rule_HTTP_Path); ok {
		return x.Path
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rule_HTTP) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rule_HTTP_Method_)(nil),
		(*Rule_HTTP_Path)(nil),
	}
}

type Rule_StringMatch struct {
	// Types that are valid to be assigned to Match:
	//	*Rule_StringMatch_Exact
	//	*Rule_StringMatch_Prefix
	//	*Rule_StringMatch_Regexp
	Match                isRule_StringMatch_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Rule_StringMatch) Reset()         { *m = Rule_StringMatch{} }
func (m *Rule_StringMatch) String() string { return proto.CompactTextString(m) }
func (*Rule_StringMatch) ProtoMessage()    {}
func (*Rule_StringMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10, 3}
}

func (m *Rule_StringMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule_StringMatch.Unmarshal(m, b)
}
func (m *Rule_StringMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule_StringMatch.Marshal(b, m, deterministic)
}
func (m *Rule_StringMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule_StringMatch.Merge(m, src)
}
func (m *Rule_StringMatch) XXX_Size() int {
	return xxx_messageInfo_Rule_StringMatch.Size(m)
}
func (m *Rule_StringMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule_StringMatch.DiscardUnknown(m)
}

var xxx_messageInfo_Rule_StringMatch proto.InternalMessageInfo

type isRule_StringMatch_Match interface {
	isRule_StringMatch_Match()
}

type Rule_StringMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type Rule_StringMatch_Prefix struct {
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof"`
}

type Rule_StringMatch_Regexp struct {
	Regexp string `protobuf:"bytes,3,opt,name=regexp,proto3,oneof"`
}

func (*Rule_StringMatch_Exact) isRule_StringMatch_Match() {}

func (*Rule_StringMatch_Prefix) isRule_StringMatch_Match() {}

func (*Rule_StringMatch_Regexp) isRule_StringMatch_Match() {}

func (m *Rule_StringMatch) GetMatch() isRule_StringMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Rule_StringMatch) GetExact() string {
	if x, ok := m.GetMatch().(*Rule_StringMatch_Exact); ok {
		return x.Exact
	}
	return ""
}

func (m *Rule_StringMatch) GetPrefix() string {
	if x, ok := m.GetMatch().(*Rule_StringMatch_Prefix); ok {
		return x.Prefix
	}
	return ""
}

func (m *Rule_StringMatch) GetRegexp() string {
	if x, ok := m.GetMatch().(*Rule_StringMatch_Regexp); ok {
		return x.Regexp
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rule_StringMatch) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rule_StringMatch_Exact)(nil),
		(*Rule_StringMatch_Prefix)(nil),
		(*Rule_StringMatch_Regexp)(nil),
	}
}

func init() {
	proto.RegisterEnum("api.Route_LoadBalanceAlgo", Route_LoadBalanceAlgo_name, Route_LoadBalanceAlgo_value)
	proto.RegisterEnum("api.Context_Protocol", Context_Protocol_name, Context_Protocol_value)
	proto.RegisterEnum("api.Rule_HTTP_Method", Rule_HTTP_Method_name, Rule_HTTP_Method_value)
	proto.RegisterType((*Response)(nil), "api.Response")
	proto.RegisterType((*Config)(nil), "api.Config")
	proto.RegisterType((*WeightedAddr)(nil), "api.WeightedAddr")
	proto.RegisterMapType((map[string]string)(nil), "api.WeightedAddr.MetricLabelsEntry")
	proto.RegisterType((*Address)(nil), "api.Address")
	proto.RegisterType((*Route)(nil), "api.Route")
	proto.RegisterMapType((map[string]string)(nil), "api.Route.MetricsLabelsEntry")
	proto.RegisterType((*Speed)(nil), "api.Speed")
	proto.RegisterType((*Retries)(nil), "api.Retries")
	proto.RegisterType((*RetryBudget)(nil), "api.RetryBudget")
	proto.RegisterType((*RequestMatch)(nil), "api.RequestMatch")
	proto.RegisterType((*Context)(nil), "api.Context")
	proto.RegisterType((*Context_Stat)(nil), "api.Context.Stat")
	proto.RegisterType((*Context_Conn)(nil), "api.Context.Conn")
	proto.RegisterType((*Context_Info)(nil), "api.Context.Info")
	proto.RegisterType((*Rule)(nil), "api.Rule")
	proto.RegisterType((*Rule_List)(nil), "api.Rule.List")
	proto.RegisterType((*Rule_TCP)(nil), "api.Rule.TCP")
	proto.RegisterType((*Rule_TCP_PortRange)(nil), "api.Rule.TCP.PortRange")
	proto.RegisterType((*Rule_HTTP)(nil), "api.Rule.HTTP")
	proto.RegisterType((*Rule_StringMatch)(nil), "api.Rule.StringMatch")
}

func init() { proto.RegisterFile("tcp.proto", fileDescriptor_5d2504774879b91c) }

var fileDescriptor_5d2504774879b91c = []byte{
	// 1407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x5d, 0x73, 0xdb, 0x44,
	0x17, 0x8e, 0x2d, 0xf9, 0x43, 0xc7, 0x49, 0xaa, 0x9e, 0xb6, 0x79, 0xf5, 0xfa, 0xed, 0x47, 0x46,
	0x2f, 0xd0, 0xcc, 0x94, 0x3a, 0x34, 0x65, 0x06, 0x86, 0x19, 0x28, 0x8e, 0x63, 0x70, 0x87, 0x34,
	0x71, 0xd7, 0xee, 0xf4, 0x0e, 0x8f, 0x6c, 0x6d, 0x1c, 0x11, 0x49, 0x2b, 0xa4, 0x75, 0x13, 0xf3,
	0x07, 0xb8, 0xe5, 0x9a, 0x7f, 0xc2, 0xef, 0xe0, 0x8a, 0xdf, 0xc0, 0x5f, 0xe0, 0x82, 0xd9, 0x0f,
	0xc9, 0x72, 0x1b, 0x60, 0xb8, 0xb2, 0xce, 0x73, 0x9e, 0xd5, 0x9e, 0x7d, 0xf6, 0x39, 0x47, 0x06,
	0x8b, 0xcf, 0x92, 0x4e, 0x92, 0x32, 0xce, 0xd0, 0xf0, 0x92, 0xa0, 0x7d, 0x7f, 0xce, 0xd8, 0x3c,
	0xa4, 0xfb, 0x12, 0x9a, 0x2e, 0xce, 0xf6, 0xfd, 0x45, 0xea, 0xf1, 0x80, 0xc5, 0x8a, 0xd4, 0xfe,
	0xdf, 0xdb, 0x79, 0x1a, 0x25, 0x7c, 0xa9, 0x92, 0xee, 0x17, 0xd0, 0x24, 0x34, 0x4b, 0x58, 0x9c,
	0x51, 0xb4, 0xa1, 0xca, 0x2e, 0x9c, 0xca, 0x6e, 0x65, 0xaf, 0x39, 0xd8, 0x20, 0x55, 0x76, 0x81,
	0x3b, 0x50, 0xa3, 0x69, 0xca, 0x52, 0xa7, 0xba, 0x5b, 0xd9, 0xb3, 0x06, 0x1b, 0x44, 0x85, 0x87,
	0x4d, 0xa8, 0xa7, 0x34, 0x5b, 0x84, 0xdc, 0xfd, 0x10, 0xea, 0x3d, 0x16, 0x9f, 0x05, 0x73, 0x74,
	0xa1, 0x9e, 0xb2, 0x05, 0xa7, 0x99, 0x53, 0xd9, 0x35, 0xf6, 0x5a, 0x07, 0xd0, 0xf1, 0x92, 0xa0,
	0x43, 0x04, 0x44, 0x74, 0xc6, 0xfd, 0xb5, 0x02, 0x9b, 0xaf, 0x69, 0x30, 0x3f, 0xe7, 0xd4, 0xef,
	0xfa, 0x7e, 0x8a, 0xbb, 0x60, 0x7a, 0xbe, 0x9f, 0xca, 0x4d, 0x5b, 0x07, 0x9b, 0x72, 0x89, 0x48,
	0xd0, 0x2c, 0x23, 0x32, 0x83, 0x3b, 0x50, 0xbf, 0x94, 0x2b, 0x1c, 0x63, 0xb7, 0xb2, 0xb7, 0x45,
	0x74, 0x84, 0x03, 0xd8, 0x8a, 0x28, 0x4f, 0x83, 0xd9, 0x24, 0xf4, 0xa6, 0x34, 0xcc, 0x1c, 0x53,
	0xee, 0xfa, 0x7f, 0xf9, 0x8a, 0xf2, 0x1e, 0x9d, 0x17, 0x92, 0x76, 0x2c, 0x59, 0xfd, 0x98, 0xa7,
	0x4b, 0xb2, 0x19, 0x95, 0xa0, 0xf6, 0x33, 0xb8, 0xf9, 0x0e, 0x05, 0x6d, 0x30, 0x2e, 0xe8, 0x52,
	0xd6, 0x65, 0x11, 0xf1, 0x88, 0xb7, 0xa1, 0xf6, 0xc6, 0x0b, 0x17, 0x54, 0x69, 0x41, 0x54, 0xf0,
	0x59, 0xf5, 0xd3, 0x8a, 0xfb, 0x39, 0x34, 0x74, 0xcd, 0xe8, 0x40, 0x23, 0xa6, 0xfc, 0x92, 0xa5,
	0x17, 0x7a, 0x69, 0x1e, 0x8a, 0x8c, 0xa7, 0x48, 0xfa, 0x05, 0x79, 0xe8, 0xfe, 0x5e, 0x83, 0x9a,
	0x94, 0x09, 0xef, 0x83, 0x91, 0xa5, 0xb3, 0x6b, 0xc5, 0x10, 0x09, 0xdc, 0x07, 0x6b, 0xc6, 0x62,
	0x3f, 0x10, 0x97, 0x2b, 0xdf, 0xd2, 0x3a, 0xb8, 0xa9, 0x54, 0xa6, 0xdf, 0x2f, 0x68, 0xc6, 0x5f,
	0x78, 0x7c, 0x76, 0x4e, 0x56, 0x1c, 0x3c, 0x82, 0x6d, 0x75, 0xd4, 0x2c, 0x57, 0xc9, 0x90, 0x2a,
	0xdd, 0x5b, 0xdd, 0x8d, 0x96, 0x27, 0x2b, 0xeb, 0xa3, 0x95, 0xd5, 0x18, 0x7e, 0x00, 0x8d, 0x54,
	0x00, 0x54, 0x88, 0xbc, 0x2a, 0x8d, 0x28, 0x8c, 0xe4, 0x49, 0x7c, 0x0a, 0x0d, 0x1e, 0x44, 0x94,
	0x2d, 0xb8, 0x53, 0x93, 0xbc, 0xff, 0x76, 0x94, 0xf5, 0x3a, 0xb9, 0xf5, 0x3a, 0x47, 0xda, 0x9a,
	0x24, 0x67, 0xe2, 0x27, 0x60, 0x5d, 0x50, 0x9a, 0x74, 0xc3, 0xe0, 0x0d, 0x75, 0xea, 0xff, 0xb4,
	0x6c, 0xc5, 0xc5, 0xc7, 0xd0, 0xa4, 0xb1, 0x9f, 0xb0, 0x20, 0xe6, 0x4e, 0xa3, 0xa4, 0x45, 0xf9,
	0xee, 0x49, 0x41, 0xc1, 0x8f, 0x61, 0x33, 0x64, 0x9e, 0x3f, 0x99, 0x7a, 0xa1, 0x17, 0xcf, 0xa8,
	0xd3, 0x94, 0x42, 0x5c, 0xb3, 0xa4, 0x25, 0x68, 0x87, 0x8a, 0x85, 0x5f, 0xc1, 0xcd, 0xf2, 0xaa,
	0x89, 0x17, 0xce, 0x99, 0x63, 0xed, 0x56, 0xf6, 0xb6, 0x0f, 0xda, 0x25, 0x0d, 0x8f, 0x57, 0x4b,
	0xba, 0xe1, 0x9c, 0x91, 0x1b, 0xe1, 0x3a, 0x80, 0xf7, 0x00, 0xbc, 0x30, 0x64, 0x97, 0x13, 0x6f,
	0x16, 0x51, 0x07, 0x44, 0x8b, 0x11, 0x4b, 0x22, 0xdd, 0x59, 0x44, 0xf1, 0x00, 0xee, 0xd0, 0xd8,
	0x9b, 0x86, 0x74, 0xc2, 0x12, 0x1e, 0x44, 0xc1, 0x0f, 0xd4, 0x9f, 0xcc, 0x58, 0xb2, 0x74, 0x5a,
	0x92, 0x79, 0x4b, 0x25, 0x4f, 0xf3, 0x5c, 0x8f, 0x25, 0x4b, 0xdc, 0x85, 0x5a, 0x96, 0x50, 0xea,
	0x3b, 0x9b, 0xf2, 0xf0, 0xaa, 0xdd, 0x46, 0x02, 0x21, 0x2a, 0xd1, 0xfe, 0x12, 0xf0, 0xdd, 0xcb,
	0xfd, 0x57, 0xce, 0x7e, 0x09, 0x37, 0xde, 0x3a, 0x1a, 0xee, 0x00, 0x12, 0xb6, 0x88, 0x7d, 0xc2,
	0xa6, 0x41, 0x9c, 0x0b, 0x67, 0x6f, 0x20, 0xc2, 0x36, 0xf1, 0x62, 0x9f, 0x45, 0x05, 0x56, 0x11,
	0xd8, 0x28, 0x62, 0x8c, 0x9f, 0x17, 0x58, 0xd5, 0xed, 0x41, 0x4d, 0x16, 0x89, 0xf7, 0x01, 0x7c,
	0x76, 0x19, 0x67, 0x3c, 0xa5, 0x5e, 0xa4, 0xcb, 0x29, 0x21, 0xd8, 0x86, 0xe6, 0x22, 0xd1, 0x59,
	0x55, 0x58, 0x11, 0xbb, 0x2f, 0xa0, 0xa1, 0xdd, 0x27, 0xfa, 0x4a, 0xa9, 0xe3, 0xab, 0xc9, 0x45,
	0xf2, 0x10, 0xf7, 0xa0, 0x3e, 0x5d, 0xf8, 0x73, 0xca, 0x75, 0xab, 0xd8, 0x85, 0x6b, 0x97, 0x87,
	0x12, 0x27, 0x3a, 0xef, 0xfe, 0x54, 0x81, 0x56, 0x09, 0xc7, 0x07, 0xd0, 0x12, 0x9e, 0x5e, 0x4e,
	0xa4, 0xeb, 0xe4, 0x7b, 0xab, 0x04, 0x24, 0x44, 0x04, 0x82, 0x4f, 0x61, 0x27, 0x0a, 0xe2, 0x89,
	0x36, 0xfe, 0x24, 0xa1, 0xe9, 0x24, 0xa3, 0xa2, 0xed, 0xe4, 0x56, 0x5b, 0xe4, 0x56, 0x14, 0xc4,
	0xba, 0xc0, 0x21, 0x4d, 0x47, 0x32, 0x85, 0x8f, 0xc0, 0xe0, 0x3c, 0x94, 0x63, 0xec, 0x6f, 0x3d,
	0x2e, 0x58, 0xee, 0x8f, 0x15, 0xd8, 0x2c, 0x77, 0x35, 0x22, 0x18, 0x59, 0x1c, 0x28, 0x9d, 0x06,
	0x1b, 0x44, 0x04, 0x78, 0x1b, 0xcc, 0x73, 0x96, 0xf1, 0x62, 0x3a, 0xcb, 0x48, 0xa0, 0x89, 0xc7,
	0xcf, 0xe5, 0x46, 0x12, 0x15, 0x11, 0x76, 0xa0, 0x76, 0x16, 0x5c, 0x51, 0x5f, 0xb7, 0xf0, 0xce,
	0x3b, 0xfb, 0xf7, 0xc5, 0x57, 0x41, 0x8c, 0x78, 0x49, 0x3b, 0x6c, 0x40, 0x2d, 0x12, 0x1b, 0xbb,
	0xbf, 0x98, 0xd0, 0xe8, 0xb1, 0x98, 0xd3, 0x2b, 0x8e, 0xdb, 0x50, 0x0d, 0x94, 0xce, 0x06, 0xa9,
	0x06, 0x3e, 0x3e, 0x81, 0xa6, 0x5c, 0x3f, 0x63, 0xa1, 0x2c, 0x62, 0xfb, 0xe0, 0x8e, 0x14, 0x59,
	0xf3, 0x3b, 0x43, 0x9d, 0x24, 0x05, 0x0d, 0x9f, 0xac, 0x5d, 0xbb, 0x51, 0x6a, 0xdc, 0x7c, 0x51,
	0x8f, 0xc5, 0xf1, 0x9a, 0x13, 0x1e, 0x97, 0x9c, 0x60, 0xfe, 0xd5, 0x82, 0x82, 0x82, 0xef, 0x83,
	0x19, 0xc4, 0x67, 0x4c, 0xcf, 0xa0, 0x75, 0xea, 0xf3, 0xf8, 0x8c, 0x11, 0x99, 0x6e, 0x0f, 0xc0,
	0x1c, 0x71, 0x8f, 0xe3, 0x5d, 0xb0, 0xa6, 0x4b, 0x4e, 0x33, 0x42, 0xbd, 0xfc, 0x68, 0x2b, 0x00,
	0x5d, 0xd8, 0x94, 0xc1, 0xeb, 0x34, 0xe0, 0x9c, 0xaa, 0xa9, 0x6b, 0x90, 0x35, 0xac, 0x7d, 0x09,
	0xa6, 0x28, 0x41, 0x70, 0x43, 0x36, 0xf3, 0x42, 0x3d, 0xb3, 0xb5, 0xa7, 0xd7, 0x30, 0x7c, 0x0f,
	0xb6, 0x52, 0x1a, 0x31, 0x4e, 0xbb, 0x6b, 0x1f, 0x83, 0x75, 0x50, 0x1c, 0x21, 0xe3, 0x1e, 0xbf,
	0x56, 0x1e, 0x51, 0x34, 0x91, 0xe9, 0xf6, 0xb7, 0x60, 0x8a, 0x03, 0x89, 0x96, 0x2e, 0xbc, 0xa1,
	0x9c, 0x81, 0x65, 0x67, 0x68, 0x5f, 0x60, 0xd9, 0x17, 0xda, 0x15, 0x77, 0xc1, 0x92, 0x9f, 0xe6,
	0x13, 0x2f, 0xa2, 0x52, 0x5b, 0x8b, 0xac, 0x00, 0xf7, 0x19, 0x34, 0xf3, 0x1b, 0xc4, 0x06, 0x18,
	0xe3, 0xde, 0xd0, 0xde, 0x10, 0x0f, 0xaf, 0x8e, 0x86, 0x76, 0x05, 0x9b, 0x60, 0x0e, 0xc6, 0xe3,
	0xa1, 0x5d, 0xc5, 0x2d, 0xb0, 0x5e, 0xf7, 0x0f, 0x47, 0xa7, 0xbd, 0x6f, 0xfa, 0x63, 0xdb, 0x10,
	0x89, 0x97, 0xaf, 0x9e, 0xf7, 0x6c, 0xd3, 0xfd, 0xc3, 0x04, 0x93, 0x2c, 0x42, 0x8a, 0x2e, 0x18,
	0x5e, 0x18, 0xea, 0x2f, 0xdb, 0xb6, 0x6a, 0xc4, 0x45, 0x48, 0x3b, 0xc7, 0x41, 0xc6, 0x85, 0x9b,
	0xbd, 0x30, 0x94, 0x9c, 0x78, 0xa9, 0x9b, 0xf5, 0x3a, 0x4e, 0xbc, 0xc4, 0x7b, 0x60, 0xc4, 0x2c,
	0xd7, 0xc5, 0x2a, 0x38, 0x22, 0x1d, 0x33, 0xde, 0x7e, 0x08, 0xa6, 0x60, 0xe3, 0x03, 0xa8, 0xa5,
	0x8b, 0xb0, 0xf8, 0x2b, 0xb2, 0x22, 0x12, 0x85, 0xb7, 0x7f, 0xae, 0xc8, 0xe3, 0xc8, 0x5e, 0x61,
	0x29, 0x97, 0x85, 0x6d, 0xc9, 0x5e, 0x61, 0x29, 0xc7, 0x7d, 0xa8, 0x89, 0xdf, 0x4c, 0xd7, 0xf2,
	0x9f, 0x55, 0x2d, 0xe3, 0xde, 0xb0, 0x33, 0x64, 0x29, 0x27, 0x5e, 0x3c, 0x17, 0xbb, 0x2a, 0x5e,
	0xde, 0x9c, 0x46, 0xa9, 0x39, 0xdb, 0xfb, 0x60, 0x15, 0x4c, 0x71, 0x43, 0x51, 0x10, 0xab, 0x6d,
	0x88, 0x78, 0x94, 0x88, 0x77, 0xa5, 0xe7, 0x85, 0x78, 0x2c, 0x3a, 0xae, 0xfd, 0x5b, 0x45, 0x29,
	0x8b, 0xfb, 0x50, 0x8f, 0x28, 0x3f, 0x67, 0xca, 0x97, 0x79, 0x73, 0xc9, 0x42, 0x44, 0x5e, 0x7c,
	0xba, 0xcf, 0x99, 0x3f, 0xd8, 0x20, 0x9a, 0x86, 0x8f, 0xf4, 0x15, 0xab, 0xba, 0x4b, 0xf4, 0x11,
	0x4f, 0x83, 0x78, 0x2e, 0x27, 0x49, 0x3e, 0x11, 0xdc, 0xef, 0xa0, 0xae, 0x5e, 0x20, 0xae, 0xf4,
	0xeb, 0xfe, 0xd8, 0xde, 0x10, 0x37, 0x37, 0x3c, 0x1d, 0x8d, 0xed, 0x8a, 0x80, 0x86, 0xaf, 0xc6,
	0x76, 0x15, 0x01, 0xea, 0x47, 0xfd, 0xe3, 0xfe, 0xb8, 0x6f, 0x1b, 0x68, 0x41, 0x6d, 0xd8, 0x1d,
	0xf7, 0x06, 0xb6, 0x89, 0x2d, 0x68, 0x9c, 0x0e, 0xc7, 0xcf, 0x4f, 0x4f, 0x46, 0x76, 0x4d, 0x04,
	0xbd, 0xd3, 0x93, 0x93, 0x7e, 0x6f, 0x6c, 0xd7, 0xa5, 0x2d, 0xfa, 0xdd, 0x23, 0xbb, 0x21, 0xe8,
	0x63, 0xd2, 0xed, 0xf5, 0xed, 0xe6, 0xea, 0x6c, 0x53, 0x68, 0x95, 0x6a, 0x91, 0x7f, 0x30, 0xaf,
	0xbc, 0x19, 0x2f, 0xe6, 0x9a, 0x0a, 0xd1, 0x81, 0x7a, 0x92, 0xd2, 0xb3, 0xe0, 0xaa, 0x98, 0x6d,
	0x3a, 0x16, 0x99, 0x94, 0xce, 0xe9, 0x55, 0x52, 0xa8, 0xad, 0xe3, 0x62, 0x8f, 0xe2, 0xe1, 0xe0,
	0x23, 0xa8, 0x0d, 0x53, 0x76, 0xb5, 0xc4, 0x87, 0x60, 0xa9, 0x7f, 0xa9, 0x8b, 0x94, 0x62, 0x2b,
	0x6f, 0xa7, 0xb3, 0x60, 0xde, 0xde, 0xd2, 0x1f, 0x05, 0xf5, 0x17, 0x78, 0x5a, 0x97, 0x73, 0xea,
	0xe9, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x6c, 0xb8, 0xd0, 0x64, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	Configure(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Response, error)
}

type proxyClient struct {
	cc grpc.ClientConnInterface
}

func NewProxyClient(cc grpc.ClientConnInterface) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Configure(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Proxy/Configure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	Configure(context.Context, *Config) (*Response, error)
}

// UnimplementedProxyServer can be embedded to have forward compatible implementations.
type UnimplementedProxyServer struct {
}

func (*UnimplementedProxyServer) Configure(ctx context.Context, req *Config) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Configure not implemented")
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Proxy/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Configure(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _Proxy_Configure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tcp.proto",
}
