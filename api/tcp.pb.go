// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcp.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route_LoadBalanceAlgo int32

const (
	Route_RoundRobinWeighted Route_LoadBalanceAlgo = 0
	Route_RandomWeighted     Route_LoadBalanceAlgo = 1
	Route_SmoothWeighted     Route_LoadBalanceAlgo = 2
)

var Route_LoadBalanceAlgo_name = map[int32]string{
	0: "RoundRobinWeighted",
	1: "RandomWeighted",
	2: "SmoothWeighted",
}

var Route_LoadBalanceAlgo_value = map[string]int32{
	"RoundRobinWeighted": 0,
	"RandomWeighted":     1,
	"SmoothWeighted":     2,
}

func (x Route_LoadBalanceAlgo) String() string {
	return proto.EnumName(Route_LoadBalanceAlgo_name, int32(x))
}

func (Route_LoadBalanceAlgo) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{11, 0}
}

type IPAddress struct {
	// Types that are valid to be assigned to Ip:
	//	*IPAddress_Ipv4
	//	*IPAddress_Ipv6
	Ip                   isIPAddress_Ip `protobuf_oneof:"ip"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IPAddress) Reset()         { *m = IPAddress{} }
func (m *IPAddress) String() string { return proto.CompactTextString(m) }
func (*IPAddress) ProtoMessage()    {}
func (*IPAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{0}
}

func (m *IPAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPAddress.Unmarshal(m, b)
}
func (m *IPAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPAddress.Marshal(b, m, deterministic)
}
func (m *IPAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPAddress.Merge(m, src)
}
func (m *IPAddress) XXX_Size() int {
	return xxx_messageInfo_IPAddress.Size(m)
}
func (m *IPAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_IPAddress.DiscardUnknown(m)
}

var xxx_messageInfo_IPAddress proto.InternalMessageInfo

type isIPAddress_Ip interface {
	isIPAddress_Ip()
}

type IPAddress_Ipv4 struct {
	Ipv4 uint32 `protobuf:"fixed32,1,opt,name=ipv4,proto3,oneof"`
}

type IPAddress_Ipv6 struct {
	Ipv6 *IPv6 `protobuf:"bytes,2,opt,name=ipv6,proto3,oneof"`
}

func (*IPAddress_Ipv4) isIPAddress_Ip() {}

func (*IPAddress_Ipv6) isIPAddress_Ip() {}

func (m *IPAddress) GetIp() isIPAddress_Ip {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *IPAddress) GetIpv4() uint32 {
	if x, ok := m.GetIp().(*IPAddress_Ipv4); ok {
		return x.Ipv4
	}
	return 0
}

func (m *IPAddress) GetIpv6() *IPv6 {
	if x, ok := m.GetIp().(*IPAddress_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IPAddress) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IPAddress_Ipv4)(nil),
		(*IPAddress_Ipv6)(nil),
	}
}

type IPv6 struct {
	First                uint64   `protobuf:"fixed64,1,opt,name=first,proto3" json:"first,omitempty"`
	Last                 uint64   `protobuf:"fixed64,2,opt,name=last,proto3" json:"last,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPv6) Reset()         { *m = IPv6{} }
func (m *IPv6) String() string { return proto.CompactTextString(m) }
func (*IPv6) ProtoMessage()    {}
func (*IPv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{1}
}

func (m *IPv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPv6.Unmarshal(m, b)
}
func (m *IPv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPv6.Marshal(b, m, deterministic)
}
func (m *IPv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPv6.Merge(m, src)
}
func (m *IPv6) XXX_Size() int {
	return xxx_messageInfo_IPv6.Size(m)
}
func (m *IPv6) XXX_DiscardUnknown() {
	xxx_messageInfo_IPv6.DiscardUnknown(m)
}

var xxx_messageInfo_IPv6 proto.InternalMessageInfo

func (m *IPv6) GetFirst() uint64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *IPv6) GetLast() uint64 {
	if m != nil {
		return m.Last
	}
	return 0
}

type TcpAddress struct {
	Ip                   *IPAddress `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32     `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TcpAddress) Reset()         { *m = TcpAddress{} }
func (m *TcpAddress) String() string { return proto.CompactTextString(m) }
func (*TcpAddress) ProtoMessage()    {}
func (*TcpAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{2}
}

func (m *TcpAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpAddress.Unmarshal(m, b)
}
func (m *TcpAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpAddress.Marshal(b, m, deterministic)
}
func (m *TcpAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpAddress.Merge(m, src)
}
func (m *TcpAddress) XXX_Size() int {
	return xxx_messageInfo_TcpAddress.Size(m)
}
func (m *TcpAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpAddress.DiscardUnknown(m)
}

var xxx_messageInfo_TcpAddress proto.InternalMessageInfo

func (m *TcpAddress) GetIp() *IPAddress {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *TcpAddress) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type InitRequest struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AvailablePorts       []int32           `protobuf:"varint,2,rep,packed,name=available_ports,json=availablePorts,proto3" json:"available_ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InitRequest) Reset()         { *m = InitRequest{} }
func (m *InitRequest) String() string { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()    {}
func (*InitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{3}
}

func (m *InitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRequest.Unmarshal(m, b)
}
func (m *InitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRequest.Marshal(b, m, deterministic)
}
func (m *InitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRequest.Merge(m, src)
}
func (m *InitRequest) XXX_Size() int {
	return xxx_messageInfo_InitRequest.Size(m)
}
func (m *InitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRequest proto.InternalMessageInfo

func (m *InitRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *InitRequest) GetAvailablePorts() []int32 {
	if m != nil {
		return m.AvailablePorts
	}
	return nil
}

type Response struct {
	// Types that are valid to be assigned to Result:
	//	*Response_Ok
	//	*Response_Error
	Result               isResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type isResponse_Result interface {
	isResponse_Result()
}

type Response_Ok struct {
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3,oneof"`
}

type Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*Response_Ok) isResponse_Result() {}

func (*Response_Error) isResponse_Result() {}

func (m *Response) GetResult() isResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Response) GetOk() bool {
	if x, ok := m.GetResult().(*Response_Ok); ok {
		return x.Ok
	}
	return false
}

func (m *Response) GetError() string {
	if x, ok := m.GetResult().(*Response_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Ok)(nil),
		(*Response_Error)(nil),
	}
}

type GetConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{5}
}

func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(m, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

type Config struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{6}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type Update struct {
	// Types that are valid to be assigned to Update:
	//	*Update_Add
	//	*Update_Remove
	Update               isUpdate_Update `protobuf_oneof:"update"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}
func (*Update) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{7}
}

func (m *Update) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Update.Unmarshal(m, b)
}
func (m *Update) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Update.Marshal(b, m, deterministic)
}
func (m *Update) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Update.Merge(m, src)
}
func (m *Update) XXX_Size() int {
	return xxx_messageInfo_Update.Size(m)
}
func (m *Update) XXX_DiscardUnknown() {
	xxx_messageInfo_Update.DiscardUnknown(m)
}

var xxx_messageInfo_Update proto.InternalMessageInfo

type isUpdate_Update interface {
	isUpdate_Update()
}

type Update_Add struct {
	Add *RouteSet `protobuf:"bytes,1,opt,name=add,proto3,oneof"`
}

type Update_Remove struct {
	Remove *RouteSet `protobuf:"bytes,2,opt,name=remove,proto3,oneof"`
}

func (*Update_Add) isUpdate_Update() {}

func (*Update_Remove) isUpdate_Update() {}

func (m *Update) GetUpdate() isUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *Update) GetAdd() *RouteSet {
	if x, ok := m.GetUpdate().(*Update_Add); ok {
		return x.Add
	}
	return nil
}

func (m *Update) GetRemove() *RouteSet {
	if x, ok := m.GetUpdate().(*Update_Remove); ok {
		return x.Remove
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Update) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Update_Add)(nil),
		(*Update_Remove)(nil),
	}
}

type RouteSet struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteSet) Reset()         { *m = RouteSet{} }
func (m *RouteSet) String() string { return proto.CompactTextString(m) }
func (*RouteSet) ProtoMessage()    {}
func (*RouteSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{8}
}

func (m *RouteSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteSet.Unmarshal(m, b)
}
func (m *RouteSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteSet.Marshal(b, m, deterministic)
}
func (m *RouteSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteSet.Merge(m, src)
}
func (m *RouteSet) XXX_Size() int {
	return xxx_messageInfo_RouteSet.Size(m)
}
func (m *RouteSet) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteSet.DiscardUnknown(m)
}

var xxx_messageInfo_RouteSet proto.InternalMessageInfo

func (m *RouteSet) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type WeightedAddr struct {
	Addr                 *Address          `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Weight               uint32            `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	MetricLabels         map[string]string `protobuf:"bytes,4,rep,name=metric_labels,json=metricLabels,proto3" json:"metric_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WeightedAddr) Reset()         { *m = WeightedAddr{} }
func (m *WeightedAddr) String() string { return proto.CompactTextString(m) }
func (*WeightedAddr) ProtoMessage()    {}
func (*WeightedAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{9}
}

func (m *WeightedAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeightedAddr.Unmarshal(m, b)
}
func (m *WeightedAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeightedAddr.Marshal(b, m, deterministic)
}
func (m *WeightedAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightedAddr.Merge(m, src)
}
func (m *WeightedAddr) XXX_Size() int {
	return xxx_messageInfo_WeightedAddr.Size(m)
}
func (m *WeightedAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightedAddr.DiscardUnknown(m)
}

var xxx_messageInfo_WeightedAddr proto.InternalMessageInfo

func (m *WeightedAddr) GetAddr() *Address {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *WeightedAddr) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *WeightedAddr) GetMetricLabels() map[string]string {
	if m != nil {
		return m.MetricLabels
	}
	return nil
}

type Address struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{10}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Route struct {
	Src                  *Address              `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Condition            *RequestMatch         `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	MetricsLabels        map[string]string     `protobuf:"bytes,3,rep,name=metrics_labels,json=metricsLabels,proto3" json:"metrics_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retries              *Retries              `protobuf:"bytes,4,opt,name=retries,proto3" json:"retries,omitempty"`
	Timeout              *duration.Duration    `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	KeepAlive            *duration.Duration    `protobuf:"bytes,6,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`
	Endpoint             *WeightedAddr         `protobuf:"bytes,7,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	LoadBalance          []*WeightedAddr       `protobuf:"bytes,8,rep,name=load_balance,json=loadBalance,proto3" json:"load_balance,omitempty"`
	LoadBalanceAlgo      Route_LoadBalanceAlgo `protobuf:"varint,9,opt,name=load_balance_algo,json=loadBalanceAlgo,proto3,enum=api.Route_LoadBalanceAlgo" json:"load_balance_algo,omitempty"`
	AllowAcme            bool                  `protobuf:"varint,10,opt,name=allow_acme,json=allowAcme,proto3" json:"allow_acme,omitempty"`
	EnableOptimizedCopy  bool                  `protobuf:"varint,11,opt,name=enable_optimized_copy,json=enableOptimizedCopy,proto3" json:"enable_optimized_copy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{11}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetSrc() *Address {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Route) GetCondition() *RequestMatch {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Route) GetMetricsLabels() map[string]string {
	if m != nil {
		return m.MetricsLabels
	}
	return nil
}

func (m *Route) GetRetries() *Retries {
	if m != nil {
		return m.Retries
	}
	return nil
}

func (m *Route) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *Route) GetKeepAlive() *duration.Duration {
	if m != nil {
		return m.KeepAlive
	}
	return nil
}

func (m *Route) GetEndpoint() *WeightedAddr {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *Route) GetLoadBalance() []*WeightedAddr {
	if m != nil {
		return m.LoadBalance
	}
	return nil
}

func (m *Route) GetLoadBalanceAlgo() Route_LoadBalanceAlgo {
	if m != nil {
		return m.LoadBalanceAlgo
	}
	return Route_RoundRobinWeighted
}

func (m *Route) GetAllowAcme() bool {
	if m != nil {
		return m.AllowAcme
	}
	return false
}

func (m *Route) GetEnableOptimizedCopy() bool {
	if m != nil {
		return m.EnableOptimizedCopy
	}
	return false
}

type Retries struct {
	Enabled              bool         `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Budget               *RetryBudget `protobuf:"bytes,2,opt,name=budget,proto3" json:"budget,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Retries) Reset()         { *m = Retries{} }
func (m *Retries) String() string { return proto.CompactTextString(m) }
func (*Retries) ProtoMessage()    {}
func (*Retries) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{12}
}

func (m *Retries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Retries.Unmarshal(m, b)
}
func (m *Retries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Retries.Marshal(b, m, deterministic)
}
func (m *Retries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Retries.Merge(m, src)
}
func (m *Retries) XXX_Size() int {
	return xxx_messageInfo_Retries.Size(m)
}
func (m *Retries) XXX_DiscardUnknown() {
	xxx_messageInfo_Retries.DiscardUnknown(m)
}

var xxx_messageInfo_Retries proto.InternalMessageInfo

func (m *Retries) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Retries) GetBudget() *RetryBudget {
	if m != nil {
		return m.Budget
	}
	return nil
}

type RetryBudget struct {
	// The ratio of additional traffic that may be added by retries.  A
	// retry_ratio of 0.1 means that 1 retry may be attempted for every 10 regular
	// requests.  A retry_ratio of 1.0 means that 1 retry may be attempted for
	// every 1 regular request (in other words, total request load may be doubled
	// as a result of retries).
	RetryRatio float32 `protobuf:"fixed32,1,opt,name=retry_ratio,json=retryRatio,proto3" json:"retry_ratio,omitempty"`
	// The proxy may always attempt this number of retries per second, even if it
	// would violate the retry_ratio.  This is to allow retries to happen even
	// when the request rate is very low.
	MinRetriesPerSecond uint32 `protobuf:"varint,2,opt,name=min_retries_per_second,json=minRetriesPerSecond,proto3" json:"min_retries_per_second,omitempty"`
	// This duration indicates for how long requests should be considered for the
	// purposes of enforcing the retry_ratio.  A higher value considers a larger
	// window and therefore allows burstier retries.
	Ttl                  *duration.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RetryBudget) Reset()         { *m = RetryBudget{} }
func (m *RetryBudget) String() string { return proto.CompactTextString(m) }
func (*RetryBudget) ProtoMessage()    {}
func (*RetryBudget) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{13}
}

func (m *RetryBudget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryBudget.Unmarshal(m, b)
}
func (m *RetryBudget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryBudget.Marshal(b, m, deterministic)
}
func (m *RetryBudget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryBudget.Merge(m, src)
}
func (m *RetryBudget) XXX_Size() int {
	return xxx_messageInfo_RetryBudget.Size(m)
}
func (m *RetryBudget) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryBudget.DiscardUnknown(m)
}

var xxx_messageInfo_RetryBudget proto.InternalMessageInfo

func (m *RetryBudget) GetRetryRatio() float32 {
	if m != nil {
		return m.RetryRatio
	}
	return 0
}

func (m *RetryBudget) GetMinRetriesPerSecond() uint32 {
	if m != nil {
		return m.MinRetriesPerSecond
	}
	return 0
}

func (m *RetryBudget) GetTtl() *duration.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type RequestMatch struct {
	// Types that are valid to be assigned to Match:
	//	*RequestMatch_Sni
	//	*RequestMatch_Host
	//	*RequestMatch_Path
	//	*RequestMatch_Fixed
	Match                isRequestMatch_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestMatch) Reset()         { *m = RequestMatch{} }
func (m *RequestMatch) String() string { return proto.CompactTextString(m) }
func (*RequestMatch) ProtoMessage()    {}
func (*RequestMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d2504774879b91c, []int{14}
}

func (m *RequestMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMatch.Unmarshal(m, b)
}
func (m *RequestMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMatch.Marshal(b, m, deterministic)
}
func (m *RequestMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMatch.Merge(m, src)
}
func (m *RequestMatch) XXX_Size() int {
	return xxx_messageInfo_RequestMatch.Size(m)
}
func (m *RequestMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMatch.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMatch proto.InternalMessageInfo

type isRequestMatch_Match interface {
	isRequestMatch_Match()
}

type RequestMatch_Sni struct {
	Sni string `protobuf:"bytes,1,opt,name=sni,proto3,oneof"`
}

type RequestMatch_Host struct {
	Host string `protobuf:"bytes,2,opt,name=host,proto3,oneof"`
}

type RequestMatch_Path struct {
	Path string `protobuf:"bytes,3,opt,name=path,proto3,oneof"`
}

type RequestMatch_Fixed struct {
	Fixed *empty.Empty `protobuf:"bytes,4,opt,name=fixed,proto3,oneof"`
}

func (*RequestMatch_Sni) isRequestMatch_Match() {}

func (*RequestMatch_Host) isRequestMatch_Match() {}

func (*RequestMatch_Path) isRequestMatch_Match() {}

func (*RequestMatch_Fixed) isRequestMatch_Match() {}

func (m *RequestMatch) GetMatch() isRequestMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *RequestMatch) GetSni() string {
	if x, ok := m.GetMatch().(*RequestMatch_Sni); ok {
		return x.Sni
	}
	return ""
}

func (m *RequestMatch) GetHost() string {
	if x, ok := m.GetMatch().(*RequestMatch_Host); ok {
		return x.Host
	}
	return ""
}

func (m *RequestMatch) GetPath() string {
	if x, ok := m.GetMatch().(*RequestMatch_Path); ok {
		return x.Path
	}
	return ""
}

func (m *RequestMatch) GetFixed() *empty.Empty {
	if x, ok := m.GetMatch().(*RequestMatch_Fixed); ok {
		return x.Fixed
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestMatch) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestMatch_Sni)(nil),
		(*RequestMatch_Host)(nil),
		(*RequestMatch_Path)(nil),
		(*RequestMatch_Fixed)(nil),
	}
}

func init() {
	proto.RegisterEnum("api.Route_LoadBalanceAlgo", Route_LoadBalanceAlgo_name, Route_LoadBalanceAlgo_value)
	proto.RegisterType((*IPAddress)(nil), "api.IPAddress")
	proto.RegisterType((*IPv6)(nil), "api.IPv6")
	proto.RegisterType((*TcpAddress)(nil), "api.TcpAddress")
	proto.RegisterType((*InitRequest)(nil), "api.InitRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.InitRequest.LabelsEntry")
	proto.RegisterType((*Response)(nil), "api.Response")
	proto.RegisterType((*GetConfigRequest)(nil), "api.GetConfigRequest")
	proto.RegisterType((*Config)(nil), "api.Config")
	proto.RegisterType((*Update)(nil), "api.Update")
	proto.RegisterType((*RouteSet)(nil), "api.RouteSet")
	proto.RegisterType((*WeightedAddr)(nil), "api.WeightedAddr")
	proto.RegisterMapType((map[string]string)(nil), "api.WeightedAddr.MetricLabelsEntry")
	proto.RegisterType((*Address)(nil), "api.Address")
	proto.RegisterType((*Route)(nil), "api.Route")
	proto.RegisterMapType((map[string]string)(nil), "api.Route.MetricsLabelsEntry")
	proto.RegisterType((*Retries)(nil), "api.Retries")
	proto.RegisterType((*RetryBudget)(nil), "api.RetryBudget")
	proto.RegisterType((*RequestMatch)(nil), "api.RequestMatch")
}

func init() { proto.RegisterFile("tcp.proto", fileDescriptor_5d2504774879b91c) }

var fileDescriptor_5d2504774879b91c = []byte{
	// 1042 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x6d, 0x6f, 0xe3, 0x44,
	0x10, 0xae, 0xf3, 0xe2, 0x24, 0x93, 0xbe, 0xa4, 0x73, 0x77, 0x95, 0x09, 0x5c, 0x2f, 0x18, 0x89,
	0x46, 0x02, 0x52, 0x94, 0x56, 0xe5, 0x45, 0x02, 0xae, 0xbd, 0x3b, 0x48, 0xa5, 0xab, 0x28, 0x5b,
	0x10, 0xdf, 0x88, 0x36, 0xf1, 0x36, 0x5d, 0xd5, 0xf6, 0x1a, 0x7b, 0x9d, 0x5e, 0xf8, 0x03, 0x48,
	0x7c, 0xe2, 0x5f, 0xf0, 0x5b, 0xf8, 0xcc, 0x1f, 0x42, 0xfb, 0xe2, 0xc4, 0xa4, 0x27, 0xe0, 0xbe,
	0x79, 0x9e, 0xe7, 0x99, 0xd9, 0xd9, 0xd9, 0xf1, 0x0c, 0xb4, 0xe4, 0x34, 0x19, 0x24, 0xa9, 0x90,
	0x02, 0xab, 0x34, 0xe1, 0xdd, 0xfd, 0x99, 0x10, 0xb3, 0x90, 0x1d, 0x6a, 0x68, 0x92, 0x5f, 0x1f,
	0x06, 0x79, 0x4a, 0x25, 0x17, 0xb1, 0x11, 0x75, 0xdf, 0x5e, 0xe7, 0x59, 0x94, 0xc8, 0x85, 0x21,
	0xfd, 0x11, 0xb4, 0xce, 0x2f, 0x4f, 0x83, 0x20, 0x65, 0x59, 0x86, 0x0f, 0xa1, 0xc6, 0x93, 0xf9,
	0xb1, 0xe7, 0xf4, 0x9c, 0x7e, 0x63, 0xb4, 0x41, 0xb4, 0x85, 0x4f, 0x34, 0x7a, 0xe2, 0x55, 0x7a,
	0x4e, 0xbf, 0x3d, 0x6c, 0x0d, 0x68, 0xc2, 0x07, 0xe7, 0x97, 0xf3, 0x13, 0x2b, 0x38, 0x39, 0xab,
	0x41, 0x85, 0x27, 0xfe, 0xc7, 0x50, 0x53, 0x28, 0x3e, 0x84, 0xfa, 0x35, 0x4f, 0x33, 0xa9, 0xa3,
	0xb8, 0xc4, 0x18, 0x88, 0x50, 0x0b, 0x69, 0x26, 0x75, 0x10, 0x97, 0xe8, 0x6f, 0xff, 0x29, 0xc0,
	0xf7, 0xd3, 0xa4, 0x38, 0x7c, 0x5f, 0x45, 0xd1, 0x4e, 0xed, 0xe1, 0xb6, 0x3d, 0xc4, 0x72, 0xa4,
	0xc2, 0x13, 0x15, 0x21, 0x11, 0xa9, 0x89, 0xb0, 0x45, 0xf4, 0xb7, 0xff, 0x87, 0x03, 0xed, 0xf3,
	0x98, 0x4b, 0xc2, 0x7e, 0xce, 0x59, 0x26, 0xf1, 0x18, 0xdc, 0x90, 0x4e, 0x58, 0x98, 0x79, 0x4e,
	0xaf, 0xda, 0x6f, 0x0f, 0xdf, 0x31, 0x71, 0x56, 0x8a, 0xc1, 0x4b, 0x4d, 0xbf, 0x88, 0x65, 0xba,
	0x20, 0x56, 0x8b, 0x07, 0xb0, 0x43, 0xe7, 0x94, 0x87, 0x74, 0x12, 0xb2, 0xb1, 0x8a, 0x9b, 0x79,
	0x95, 0x5e, 0xb5, 0x5f, 0x27, 0xdb, 0x4b, 0xf8, 0x52, 0xa1, 0xdd, 0xcf, 0xa0, 0x5d, 0xf2, 0xc7,
	0x0e, 0x54, 0x6f, 0xd9, 0x42, 0xa7, 0xdc, 0x22, 0xea, 0x53, 0xdd, 0x7d, 0x4e, 0xc3, 0x9c, 0xe9,
	0x24, 0x5b, 0xc4, 0x18, 0x9f, 0x57, 0x3e, 0x75, 0xfc, 0x2f, 0xa1, 0x49, 0x58, 0x96, 0x88, 0x38,
	0x63, 0xd8, 0x81, 0x8a, 0xb8, 0xd5, 0x6e, 0xcd, 0xd1, 0x06, 0xa9, 0x88, 0x5b, 0xdc, 0x83, 0x3a,
	0x4b, 0x53, 0x91, 0x1a, 0xbf, 0xd1, 0x06, 0x31, 0xe6, 0x59, 0x13, 0xdc, 0x94, 0x65, 0x79, 0x28,
	0x7d, 0x84, 0xce, 0x37, 0x4c, 0x3e, 0x13, 0xf1, 0x35, 0x9f, 0xd9, 0xbb, 0xf8, 0x1f, 0x82, 0x6b,
	0x00, 0xf4, 0xc1, 0x4d, 0x45, 0x2e, 0x59, 0x71, 0x6f, 0xd0, 0xf7, 0x26, 0x0a, 0x22, 0x96, 0xf1,
	0x7f, 0x02, 0xf7, 0x87, 0x24, 0xa0, 0x92, 0xe1, 0xbb, 0x50, 0xa5, 0x41, 0x60, 0x4b, 0xbd, 0xb5,
	0x92, 0x5e, 0x31, 0x39, 0xda, 0x20, 0x8a, 0xc3, 0x03, 0x75, 0x70, 0x24, 0xe6, 0xcc, 0xbe, 0xfa,
	0x3d, 0x95, 0xa5, 0x55, 0x86, 0xb9, 0x8e, 0xea, 0x0f, 0xa0, 0x59, 0xf0, 0xff, 0x2b, 0x9f, 0xbf,
	0x1c, 0xd8, 0xfc, 0x91, 0xf1, 0xd9, 0x8d, 0x64, 0x81, 0x7a, 0x67, 0xec, 0x41, 0x8d, 0x06, 0x41,
	0x6a, 0xf3, 0xda, 0xd4, 0x2e, 0x45, 0x03, 0x68, 0x06, 0xf7, 0xc0, 0xbd, 0xd3, 0x1e, 0x5e, 0x55,
	0x37, 0x81, 0xb5, 0x70, 0x04, 0x5b, 0x11, 0x93, 0x29, 0x9f, 0x8e, 0xed, 0xeb, 0xd7, 0xf4, 0xa9,
	0xef, 0xe9, 0x10, 0xe5, 0x33, 0x06, 0x17, 0x5a, 0x56, 0x6e, 0x82, 0xcd, 0xa8, 0x04, 0x75, 0xbf,
	0x82, 0xdd, 0x7b, 0x92, 0x37, 0x7a, 0xe7, 0x2f, 0xa0, 0x51, 0x34, 0xb4, 0x07, 0x8d, 0x98, 0xc9,
	0x3b, 0x91, 0xde, 0x5a, 0xd7, 0xc2, 0x54, 0x0c, 0x35, 0x22, 0x1b, 0xa0, 0x30, 0xfd, 0x3f, 0xeb,
	0x50, 0xd7, 0x65, 0xc2, 0x7d, 0xa8, 0x66, 0xe9, 0xf4, 0xb5, 0xc5, 0x50, 0x04, 0x1e, 0x42, 0x6b,
	0x2a, 0xe2, 0x80, 0xab, 0x1f, 0xdd, 0x3e, 0xd2, 0xae, 0xa9, 0xb2, 0xe9, 0x8e, 0x0b, 0x2a, 0xa7,
	0x37, 0x64, 0xa5, 0xc1, 0xe7, 0xb0, 0x6d, 0xae, 0x9a, 0x15, 0x55, 0xaa, 0xea, 0x2a, 0x3d, 0x5e,
	0xbd, 0x8d, 0x2d, 0x4f, 0x56, 0xae, 0x8f, 0xad, 0xac, 0xc5, 0xf0, 0x7d, 0x68, 0xa4, 0x0a, 0x60,
	0xaa, 0xc8, 0xab, 0xd4, 0x88, 0xc1, 0x48, 0x41, 0xe2, 0x11, 0x34, 0x24, 0x8f, 0x98, 0xc8, 0xa5,
	0x57, 0xd7, 0xba, 0xb7, 0x06, 0x66, 0x0c, 0x0d, 0x8a, 0x31, 0x34, 0x78, 0x6e, 0xc7, 0x14, 0x29,
	0x94, 0xf8, 0x09, 0xb4, 0x6e, 0x19, 0x4b, 0x4e, 0x43, 0x3e, 0x67, 0x9e, 0xfb, 0x5f, 0x6e, 0x2b,
	0x2d, 0x7e, 0x04, 0x4d, 0x16, 0x07, 0x89, 0xe0, 0xb1, 0xf4, 0x1a, 0xa5, 0x5a, 0x94, 0xdf, 0x9e,
	0x2c, 0x25, 0x78, 0x0c, 0x9b, 0xa1, 0xa0, 0xc1, 0x78, 0x42, 0x43, 0x1a, 0x4f, 0x99, 0xd7, 0xd4,
	0x85, 0x78, 0x8d, 0x4b, 0x5b, 0xc9, 0xce, 0x8c, 0x0a, 0xbf, 0x86, 0xdd, 0xb2, 0xd7, 0x98, 0x86,
	0x33, 0xe1, 0xb5, 0x7a, 0x4e, 0x7f, 0x7b, 0xd8, 0x2d, 0xd5, 0xf0, 0xe5, 0xca, 0xe5, 0x34, 0x9c,
	0x09, 0xb2, 0x13, 0xfe, 0x13, 0xc0, 0xc7, 0x00, 0x34, 0x0c, 0xc5, 0xdd, 0x98, 0x4e, 0x23, 0xe6,
	0x81, 0x1a, 0x03, 0xa4, 0xa5, 0x91, 0xd3, 0x69, 0xc4, 0x70, 0x08, 0x8f, 0x58, 0xac, 0x47, 0x91,
	0x48, 0x24, 0x8f, 0xf8, 0x2f, 0x2c, 0x18, 0x4f, 0x45, 0xb2, 0xf0, 0xda, 0x5a, 0xf9, 0xc0, 0x90,
	0xdf, 0x16, 0xdc, 0x33, 0x91, 0x2c, 0xba, 0x4f, 0x01, 0xef, 0x3f, 0xdd, 0x1b, 0xf5, 0xed, 0x77,
	0xb0, 0xb3, 0x96, 0x38, 0xee, 0x01, 0x12, 0x91, 0xc7, 0x01, 0x11, 0x13, 0x1e, 0x17, 0x65, 0xe9,
	0x6c, 0x20, 0xc2, 0x36, 0xa1, 0x71, 0x20, 0xa2, 0x25, 0xe6, 0x28, 0xec, 0x2a, 0x12, 0x42, 0xde,
	0x2c, 0xb1, 0x8a, 0x7f, 0x01, 0x0d, 0xdb, 0x16, 0xaa, 0xe1, 0x4d, 0xda, 0x66, 0xea, 0x34, 0x49,
	0x61, 0x62, 0x1f, 0xdc, 0x49, 0x1e, 0xcc, 0x98, 0xb4, 0x3d, 0xdc, 0x59, 0xb6, 0xd3, 0xe2, 0x4c,
	0xe3, 0xc4, 0xf2, 0xfe, 0xef, 0x0e, 0xb4, 0x4b, 0x38, 0x3e, 0x81, 0xb6, 0x6a, 0xb6, 0xc5, 0x58,
	0xb7, 0x83, 0x8e, 0x5b, 0x21, 0xa0, 0x21, 0xa2, 0x10, 0x3c, 0x82, 0xbd, 0x88, 0xc7, 0x63, 0xdb,
	0x91, 0xe3, 0x84, 0xa5, 0xe3, 0x8c, 0xa9, 0xff, 0xc1, 0xae, 0x90, 0x07, 0x11, 0x8f, 0x6d, 0x82,
	0x97, 0x2c, 0xbd, 0xd2, 0x14, 0x7e, 0x00, 0x55, 0x29, 0x43, 0x3d, 0x5f, 0xfe, 0xb5, 0xf9, 0x94,
	0xca, 0xff, 0xd5, 0x81, 0xcd, 0xf2, 0xef, 0x86, 0x08, 0xd5, 0x2c, 0xe6, 0xa6, 0xe2, 0x6a, 0x94,
	0x66, 0x31, 0x57, 0x4b, 0xf5, 0x46, 0xd8, 0xcd, 0xa7, 0x40, 0x6d, 0x29, 0x34, 0xa1, 0xf2, 0x46,
	0x1f, 0xa4, 0x51, 0x65, 0xe1, 0x40, 0xed, 0xce, 0x57, 0x2c, 0xb0, 0xff, 0xd6, 0xde, 0xbd, 0xf3,
	0x5f, 0xa8, 0xd5, 0xad, 0xf6, 0x83, 0x96, 0x9d, 0x35, 0xa0, 0x1e, 0xa9, 0x83, 0x87, 0xbf, 0x39,
	0x50, 0xbf, 0x4c, 0xc5, 0xab, 0x05, 0x1e, 0x40, 0x4d, 0xed, 0x3b, 0xec, 0xac, 0xaf, 0xbe, 0xae,
	0x9d, 0xe1, 0xc5, 0x16, 0x3a, 0x80, 0x86, 0xd9, 0x07, 0x19, 0xb6, 0x35, 0x63, 0xac, 0x35, 0x59,
	0xdf, 0x51, 0x93, 0x66, 0xb9, 0x7a, 0xf0, 0x91, 0x66, 0xd7, 0x57, 0x51, 0xd7, 0x44, 0x30, 0xd8,
	0xc4, 0xd5, 0xe9, 0x1e, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x61, 0x03, 0xbf, 0xd4, 0xa9, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Response, error)
	Updates(ctx context.Context, opts ...grpc.CallOption) (Proxy_UpdatesClient, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*Config, error)
}

type proxyClient struct {
	cc grpc.ClientConnInterface
}

func NewProxyClient(cc grpc.ClientConnInterface) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Proxy/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) Updates(ctx context.Context, opts ...grpc.CallOption) (Proxy_UpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Proxy_serviceDesc.Streams[0], "/api.Proxy/Updates", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyUpdatesClient{stream}
	return x, nil
}

type Proxy_UpdatesClient interface {
	Send(*Update) error
	CloseAndRecv() (*Response, error)
	grpc.ClientStream
}

type proxyUpdatesClient struct {
	grpc.ClientStream
}

func (x *proxyUpdatesClient) Send(m *Update) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyUpdatesClient) CloseAndRecv() (*Response, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proxyClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/api.Proxy/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	Init(context.Context, *InitRequest) (*Response, error)
	Updates(Proxy_UpdatesServer) error
	GetConfig(context.Context, *GetConfigRequest) (*Config, error)
}

// UnimplementedProxyServer can be embedded to have forward compatible implementations.
type UnimplementedProxyServer struct {
}

func (*UnimplementedProxyServer) Init(ctx context.Context, req *InitRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedProxyServer) Updates(srv Proxy_UpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method Updates not implemented")
}
func (*UnimplementedProxyServer) GetConfig(ctx context.Context, req *GetConfigRequest) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Proxy/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Init(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_Updates_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).Updates(&proxyUpdatesServer{stream})
}

type Proxy_UpdatesServer interface {
	SendAndClose(*Response) error
	Recv() (*Update, error)
	grpc.ServerStream
}

type proxyUpdatesServer struct {
	grpc.ServerStream
}

func (x *proxyUpdatesServer) SendAndClose(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyUpdatesServer) Recv() (*Update, error) {
	m := new(Update)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Proxy_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Proxy/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _Proxy_Init_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Proxy_GetConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Updates",
			Handler:       _Proxy_Updates_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "tcp.proto",
}
